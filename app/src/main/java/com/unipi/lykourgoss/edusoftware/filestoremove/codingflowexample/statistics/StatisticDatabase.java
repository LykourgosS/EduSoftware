package com.unipi.lykourgoss.edusoftware.filestoremove.codingflowexample.statistics;

import android.content.Context;
import android.os.AsyncTask;

import androidx.annotation.NonNull;
import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;
import androidx.sqlite.db.SupportSQLiteDatabase;

import com.unipi.lykourgoss.edusoftware.filestoremove.codingflowexample.statistics.ExamStatistic.ExamStatistic;
import com.unipi.lykourgoss.edusoftware.filestoremove.codingflowexample.statistics.SubsectionStatistic.SubsectionStatistic;
import com.unipi.lykourgoss.edusoftware.filestoremove.codingflowexample.statistics.SubsectionStatistic.SubsectionStatisticDao;

/**
 * Created by LykourgosS <lpsarantidis@gmail.com>
 * on 17,June,2019.
 */

//todo to add more entities add them with a comma above
@Database(entities = {SubsectionStatistic.class, ExamStatistic.class}, version = 1, exportSchema = false)
public abstract class StatisticDatabase extends RoomDatabase {

    private static StatisticDatabase instance;

    // code of Dao() method will be automatically generated by Room,
    // because of the use of Room.databaseBuilder
    public abstract SubsectionStatisticDao SubsectionStatisticDao();
    public abstract ExamStatistic ExamStatistic();

    public static synchronized StatisticDatabase getInstance(Context context){
        if (instance == null){
            instance = Room.databaseBuilder(context.getApplicationContext(),
                    StatisticDatabase.class, "statistic_database")
                    .fallbackToDestructiveMigration()
                    .addCallback(roomCallback)
                    .build();
        }
        return instance;
    }

    private static Callback roomCallback = new Callback(){
        @Override
        public void onCreate(@NonNull SupportSQLiteDatabase db) {
            super.onCreate(db);
            /*new PopulateDbAsyncTask(instance).execute();*/
        }
    };

    /*private static class PopulateDbAsyncTask extends AsyncTask<Void, Void, Void>{
        private LessonDao lessonDao;

        public PopulateDbAsyncTask(StatisticDatabase lessonDatabase) {
            this.lessonDao = lessonDatabase.lessonDao();
        }

        @Override
        protected Void doInBackground(Void... voids) {
            lessonDao.insert(new Lesson("OCA Java", "", 0, "lpsarantidis@gmail.com"));
            return null;
        }
    }*/
}
